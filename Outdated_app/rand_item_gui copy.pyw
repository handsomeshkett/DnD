import os
import random
import tkinter as tk
from tkinter import simpledialog

# –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –≤—ã–ø–∞–¥–µ–Ω–∏—è
RARITY_WEIGHTS = {
    "–ö—É—Å—Ç–∞—Ä–Ω–æ–µ": 30,
    "–ó–∞—É—Ä—è–¥–Ω–æ–µ": 35,
    "–°–æ–ª–∏–¥–Ω–æ–µ": 13,
    "–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ": 12,
    "–ù–µ–º—ã—Å–ª–∏–º–æ–µ": 8,
    "–ö–∞–Ω–æ–Ω–∏—á–µ—Å–∫–æ–µ": 1,
    "–ü—Ä–æ—Ä—ã–≤–Ω–æ–µ": 1,
}
RARITY_CATEGORIES = list(RARITY_WEIGHTS.keys())

# –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (—Ç–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è, –≥–¥–µ –ª–µ–∂–∏—Ç —Å–∫—Ä–∏–ø—Ç)
BASE_DIR = os.path.abspath(os.path.dirname(__file__))

def scan_files(directory):
    matched_files = {rarity: [] for rarity in RARITY_CATEGORIES}

    for root, _, files in os.walk(directory):
        for fname in files:
            if not fname.lower().endswith('.txt'):
                continue  # –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã, –∫—Ä–æ–º–µ .txt

            path = os.path.join(root, fname)
            try:
                with open(path, 'r', encoding='utf-8') as f:
                    content = f.read().lower()
                    found = False
                    for rarity in RARITY_CATEGORIES:
                        if rarity.lower() in content or rarity.lower() in fname.lower():
                            matched_files[rarity].append(path)
                            found = True
                            break
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {path}: {e}")

    return matched_files


def select_random_items(matched_files, total_count):
    flat_pool = []
    for rarity, weight in RARITY_WEIGHTS.items():
        flat_pool.extend([rarity] * weight)

    selected = []

    while len(selected) < total_count:
        if not flat_pool:
            break

        rarity = random.choice(flat_pool)
        if matched_files[rarity]:
            file_path = random.choice(matched_files[rarity])
            matched_files[rarity].remove(file_path)
            selected.append((rarity, file_path))

        flat_pool = [r for r in flat_pool if matched_files[r]]

    return selected

def copy_and_show_file(path):
    # –ö–æ–ø–∏—Ä—É–µ–º –ø—É—Ç—å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
    root.clipboard_clear()
    root.clipboard_append(path)

    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    viewer = tk.Toplevel()
    viewer.title(os.path.basename(path))

    text_widget = tk.Text(viewer, wrap='word', width=80, height=25)
    text_widget.pack(expand=False, fill='both')

    try:
        with open(path, 'r', encoding='utf-8') as f:
            content = f.read()
    except Exception as e:
        content = f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª:\n{e}"

    text_widget.insert('1.0', content)
    text_widget.config(state='disabled')  # –ó–∞–ø—Ä–µ—Ç–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

def run_randomizer():
    total_count = simpledialog.askinteger("–°–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤?", "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤:", minvalue=1)
    if not total_count:
        return

    matched_files = scan_files(BASE_DIR)
    selected_items = select_random_items(matched_files, total_count)

    result_window = tk.Toplevel()
    result_window.title("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä–∞")

    for rarity, path in selected_items:
        frame = tk.Frame(result_window)
        frame.pack(fill='x', pady=2, padx=5)

        tk.Label(frame, text=f"{rarity} ‚Üí {os.path.basename(path)}").pack(side='left', anchor='w')
        tk.Button(frame, text="üìã", command=lambda p=path: copy_and_show_file(p)).pack(side='right')

# GUI
root = tk.Tk()
root.title("–†–∞–Ω–¥–æ–º–∏–∑–∞—Ç–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è D&D")
root.geometry("500x300")

tk.Label(root, text="üé≤ –†–∞–Ω–¥–æ–º–∏–∑–∞—Ç–æ—Ä –ò–Ω–≤–µ–Ω—Ç–∞—Ä—è").pack(pady=10)
tk.Button(root, text="–ó–∞–ø—É—Å—Ç–∏—Ç—å", command=run_randomizer, bg="lightgreen").pack(pady=10)

root.mainloop()
