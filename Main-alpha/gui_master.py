
import sys
import os
import tkinter as tk
from entities import rarities, rarity_weights, rarity_names, rarity_price_ranges
from core import randomize_items

class DnDApp:
    def __init__(self, root):
        self.root = root
        self.main_frame = tk.Frame(root, bg="#fff")
        self.main_frame.pack(fill='both', expand=True)
        self.show_welcome()

    def show_welcome(self):
        self.clear_frame()
        label = tk.Label(self.main_frame, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞—Å—Ç–µ—Ä-–º–µ–Ω—é DnD!", font=("Arial", 18))
        label.pack(pady=40)

    def clear_frame(self):
        for widget in self.main_frame.winfo_children():
            widget.destroy()
        self.bottom_menu()

    def bottom_menu(self):
        menu_bar = tk.Frame(self.main_frame, bg="#f3f4f6")
        menu_bar.pack(side='bottom', fill='x')
        btn_item = tk.Button(menu_bar, text="üß∞", font=("Arial", 18), command=self.show_item_checkbox, bd=0, bg="#f3f4f6", activebackground="#e0e7ff")
        btn_item.pack(side='left', expand=True, fill='x', padx=10, pady=8)
        btn_quest = tk.Button(menu_bar, text="üè∑Ô∏è", font=("Arial", 18), command=self.generate_price, bd=0, bg="#f3f4f6", activebackground="#e0e7ff")
        btn_quest.pack(side='left', expand=True, fill='x', padx=10, pady=8)
        btn_msg = tk.Button(menu_bar, text="üí¨", font=("Arial", 18), command=self.send_message, bd=0, bg="#f3f4f6", activebackground="#e0e7ff")
        btn_msg.pack(side='left', expand=True, fill='x', padx=10, pady=8)
        btn_history = tk.Button(menu_bar, text="üìú", font=("Arial", 18), command=self.show_history, bd=0, bg="#f3f4f6", activebackground="#e0e7ff")
        btn_history.pack(side='left', expand=True, fill='x', padx=10, pady=8)

        # TODO: –°–æ–∑–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π bottom_menu –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
        #       –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫

    def show_item_checkbox(self):
        self.clear_frame()
        self.rarity_vars = {}
        
        label = tk.Label(self.main_frame, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–¥–∫–æ—Å—Ç–∏:", font=("Arial", 16))
        label.pack(pady=20)

        for rarity in rarity_names.values():
            var = tk.BooleanVar(value=True)
            chk = tk.Checkbutton(self.main_frame,
                         text=rarity,
                         variable=var,
                         font=("Arial", 11),
                         anchor='center')
            chk.pack(anchor='center', pady=5)
            self.rarity_vars[rarity] = var
        
        run_button = tk.Button(self.main_frame, text="–î–∞–ª–µ–µ", command=self.show_item_count, bg="lightgreen",  font=("Arial", 14))
        run_button.pack(anchor= 'center', pady=15) 

        # TODO: –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        #       –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ–¥–∫–æ—Å—Ç–µ–π –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö

    def show_item_count(self):
        self.clear_frame()
        
        label = tk.Label(self.main_frame, text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏–∏:", font=("Arial", 16))
        label.pack(pady=20)
        self.item_count_var = tk.IntVar(value=1)
        count_entry = tk.Entry(self.main_frame, textvariable=self.item_count_var, font=("Arial", 11), width=5)
        count_entry.pack(pady=10)
        
        run_button = tk.Button(self.main_frame, text="–ó–∞–ø—É—Å—Ç–∏—Ç—å", command=self.show_randomizer_result, bg="lightgreen", font=("Arial", 14))
        run_button.pack(anchor='center', pady=15)

         # TODO: –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
         #       –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–æ–ª—å –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞
        
    def show_randomizer_result(self):
        self.clear_frame()

        selected_rarities = []
        for rarity, vars in self.rarity_vars.items():
            if vars.get():           
                selected_rarities.append(rarity)
        count = self.item_count_var.get()
        
        items = randomize_items(selected_rarities, count)

        

    def generate_price(self):
        self.clear_frame()
        label = tk.Label(self.main_frame, text="–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ü–µ–Ω—ã –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.", font=("Arial", 15))
        label.pack(pady=40)

    def send_message(self):
        self.clear_frame()
        label = tk.Label(self.main_frame, text="–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.", font=("Arial", 15))
        label.pack(pady=40)


    def show_history(self):
        self.clear_frame()

        label = tk.Label(self.main_frame, text="–ò—Å—Ç–æ—Ä–∏—è –∏–≥—Ä–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π:", font=("Arial", 16))
        label.pack(pady=20)

        logs_path = os.path.join(os.path.dirname(__file__), "logs.txt")
        try:
            with open(logs_path, "r", encoding="utf-8") as f:
                logs = f.read()
        except FileNotFoundError:
            logs = "–§–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏ (logs.txt) –Ω–µ –Ω–∞–π–¥–µ–Ω."

        text_box = tk.Text(self.main_frame, wrap="word", font=("Arial", 11), height=20, width=70)
        text_box.insert("1.0", logs)
        text_box.config(state="disabled")
        text_box.pack(padx=10, pady=10)


def run_app():
    root = tk.Tk()
    root.title("DnD Master Menu")
    root.geometry("700x500")
    app = DnDApp(root)
    root.mainloop()

if __name__ == "__main__":
    run_app()

