

def log_message(*args, **kwargs):
    with open('logs.txt', 'a', encoding='utf-8') as f:
        print(*args, **kwargs, file=f)

##–§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–ª–º–µ—Ç–æ–≤

def randomize_items(selected_rarities, total_count):
    pass

    ## –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å —É—á–µ—Ç–æ–º –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ–¥–∫–æ—Å—Ç–µ–π

    ## –°–æ–∑–¥–∞–µ–º –≤–∑–≤–µ—à–µ–Ω–Ω—ã–π –ø—É–ª –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å —É—á–µ—Ç–æ–º –≤–µ—Å–∞ —Ä–µ–¥–∫–æ—Å—Ç–µ–π

    ## –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –ø—É–ª–∞

    ## –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤

    #!!!!! –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Ñ–∞–π–ª–æ–≤ —Å —É—á–µ—Ç–æ–º –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ–¥–∫–æ—Å—Ç–µ–π
    matched_files = scan_files("items.json", selected_rarities)
    # –û—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ–¥–∫–æ—Å—Ç–∏
    #filtered_files = {rarity: matched_files[rarity] for rarity in selected_rarities}

    selected_items = select_random_items(matched_files, total_count)
    log_message(f"–í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã: {selected_items}")

    if not selected_items:
        messagebox.showinfo("–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤", "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ–¥–∫–æ—Å—Ç–µ–π.")
        return

    result_window = tk.Toplevel()
    result_window.title("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä–∞")

    for name, rarity in selected_items:
        frame = tk.Frame(result_window)
        frame.pack(fill='x', pady=2, padx=5)

        tk.Label(frame, text=f"{rarity} ‚Üí {name}").pack(side='left', anchor='w')
        tk.Button(frame, text="üìã", command=lambda n=name: show_info(n)).pack(side='right')

